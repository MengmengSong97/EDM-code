%%% Data and Calculations in Example 2
%%% Error analysis are done
clc;clear;
n=100;d=2;
Pbar=[-1.033630210385973  -1.178640983789349
   0.649569599977608  -1.178640983789349
  -1.331257365950855  -1.775013352485288
  -0.283661018054323  -0.825390230565236
   0.991807625278017  -0.327427646626151
   0.412145348547367   0.368459275254685
   2.556299536259862  -0.855746349602479
   0.878600163306547   2.114688078379502
  -0.696176689409080  -1.364231206089443
  -0.162180041509470  -0.522578309426011
   1.712710332227283   1.341784787338087
   0.602740624414031  -1.867469890348051
  -0.012357010044912  -1.555196540483643
   1.670512879768185   2.784959887489502
   1.122372222625670   0.875964046196873
  -1.984442922765956   0.723074582401233
   1.426981811920711   1.538726488937255
   1.389425202305286  -0.361363957891780
   0.338833815684559   0.774743936824055
   1.534235253628192  -0.727295134875824
  -0.605566564082166  -0.057330344460996
  -0.911540823279898   0.176614987769694
   0.238242556132373  -0.299633830050417
   0.509921379015613  -1.224890139812210
  -0.981547184783109  -0.823802939649094
  -0.570980586792035  -2.320361385925600
  -0.052193174412013   0.949287666563739
  -0.603711774513091  -0.190645076923973
   0.545221895794768  -2.032345019731187
   0.523658659966602  -1.227592992920025
  -0.947899292488983  -0.707545813430543
   1.819814265823019   0.999184747027867
   0.569575277094734  -1.725768226686605
  -1.135270435905324   0.296635643569752
   0.532504025892949   1.506150384444886
   0.726243889833278   0.060875139371486
  -0.718259653867818  -0.157117944101911
  -0.032041627214559   1.340848418678961
   0.006906675680241   2.470528619902459
   0.291611798738333  -0.842487454993122
  -0.395047854798627  -0.896609303521230
   0.927467074982651   0.291817870296123
  -1.717343603413036  -2.422917141918957
   0.969102755850493   1.074953864914180
  -0.155105593075689   0.243501506516566
  -0.469952776827370   1.557776672396190
   0.378433739249120  -0.165969201941143
  -1.245475151760687   0.524745230452472
   0.322126524630892   1.429004416785975
   0.098887820079390  -1.396553492037817
  -0.834616131319917  -0.552572203212799
  -0.727413560415179   0.853042319190052
   0.185623458181772  -1.054506418716316
  -1.829330399438927  -0.040573423351295
   0.211148065854350  -0.104840178687221
   0.030482632130215  -1.864921083165005
  -0.976926521906862  -0.788464144341897
   0.143160746456289  -1.890983885926689
   0.821854440530070  -0.157611278397927
  -0.612239730140436   0.120613648288042
   0.765689238789830  -1.309301105156321
   0.615760523262690   1.121612816021470
   0.705750478802658  -1.028630045953705
   0.569087584831967   0.671643925186752
   1.199330066066890   0.277228566725880
   0.183054465491491   0.023115928182496
   1.954934696080934  -0.137009126338874
  -0.672557984863675  -0.904313486744372
  -0.613788769206554   1.123159234031610
   0.678823076382047   0.366504888905709
  -0.325527831944621   0.188685884324912
  -0.386283516136783   0.420460707347013
  -0.589000570354979   0.686623692018301
  -0.873655331656995   1.160902619809439
   0.270729435944331  -0.695666070171300
  -0.195250511533137   1.853366150230048
  -0.066981391712011   0.770468502747308
  -0.709442791265199   0.223281462919877
   0.530895437116832   0.104932106915391
   0.194189933809883   0.125976954263793
  -0.185667745030609   0.040981873356857
  -0.733904044130290   0.155801130751642
  -1.379388270953106  -0.862545173199820
   0.093362754999819  -1.253332135334718
  -0.430530363292907  -1.007149838798445
   1.193211908616956   1.695713481712435
  -0.447999329068673  -0.110108579597432
  -0.256102748022440   1.697494599274596
   0.224806483730058   2.158405440686360
  -0.798322345787252  -1.210631047452131
  -0.660518334887796   0.845508823692582
   2.062082792390112   1.945936594882734
  -0.872057537108046   0.031427560620459
  -0.592982036255925   1.744724455179235
  -1.215210891963022   1.632067345037461
  -0.744726678779576   0.111870741789322
  -1.674611971925607  -2.505090066183809
  -0.145280208204980   0.588469519816415
   0.007247908375317   1.325661128127069
  -0.791219979911809  -1.001194168739293];

Pc=[  
    1.007013243804624  -1.200486572652115
  -0.546653261798670  -1.200486572652115
   1.313389159551110  -1.791141025323777
   0.304549396687125  -0.827555302622596
  -0.945826701524710  -0.334988385477957
  -0.414923934349131   0.364527856950367
   1.919140489538256   1.125413437867054
  -0.965677274985660   2.082758829863336
   0.711788038693884  -1.364633423213318
   0.171997429898254  -0.528243682894357
  -1.686833019265027   1.364809441238173
  -0.445407391975433  -1.894456791933398
   0.123292699445299  -1.548926774691130
  -1.716613823618382   2.761461040744051
  -1.105561064417256   0.886543230603536
  -1.244602113094194  -0.549144173226083
  -1.419082820348202   1.545893299622892
  -1.348631424452667  -0.373805972808307
  -0.381204680220408   0.761475206683394
  -1.481732902108330  -0.757243285721157
   0.554871044222443  -0.077482041637706
   0.857503853642923   0.164750661155562
  -0.206819210989238  -0.301838546780411
  -0.402658251492393  -1.241108773050711
   0.944403715298050  -0.852212993527459
   0.683482128677888  -2.295217148685201
  -0.044439086738769   0.936242968617182
   0.558035858187927  -0.212420946133654
  -0.374448993289940  -2.056700838618760
  -0.416182236250185  -1.244480249593985
   0.908752531053089  -0.736495601906897
  -1.789998130918648   1.027287576254143
  -0.423440212881880  -1.749800497609727
   1.084038106946175   0.292570737680602
  -0.612413227016972   1.481818307029435
  -0.694781525787489   0.063928552749218
   0.669857509192854  -0.179867548986440
  -0.093895116655006   1.328006169116405
  -0.219825965138808   2.455565321361243
  -0.217013946378995  -0.846714612731448
   0.408630698734150  -0.900113529862649
  -0.900062221719487   0.299655092578667
   1.704878171974422  -2.434942573853843
  -0.969650589464326   1.075586136118912
   0.105103387678745   0.229163731814805
   0.317437246343811   1.571703351605569
  -0.347345353566846  -0.167212562152959
   1.189841467910101   0.533539023807466
  -0.421589971010270   1.405733117131953
   0.007928115483459  -1.394937385399408
   0.794660900051477  -0.579574613701977
   0.635393602583044   0.864905947787972
  -0.100159006197213  -1.056217302864982
   1.796162671394490  -0.058560295424354
  -0.196813645748957  -0.108448014597188
   0.108748811886842  -1.859114206766278
   0.938963640138145  -0.817284333035824
   0.005515684088816  -1.890743892620960
  -0.781048884150131  -0.158707685297471
   0.554879719815141   0.104487671939814
  -0.654997078215457  -1.338373354239618
  -0.653558057671607   1.107732817725480
  -0.614625078915466  -1.049997334015609
  -0.578511467979587   0.667078008779166
  -1.169527839479806   0.287595054808779
  -0.181506695278670   0.017632425080991
  -1.926625060930865  -0.141806254646063
   0.657962701953198  -0.918237298398621
   0.498573872307247   1.137945028517018
  -0.662311637229470   0.369800507407053
   0.269307681587006   0.173267019350540
   0.314409256617992   0.409520400830478
   0.503124902759725   0.688452530862769
   0.765791671586127   1.187677739170322
  -0.207959078139474  -0.698649443462929
   0.021519397451214   1.851236825588334
  -0.016781649682480   0.757214497010076
   0.649436692125862   0.211240838448467
  -0.508305555142062   0.105965615834306
  -0.199784824435616   0.119523762790968
   0.148356528364165   0.026611733283065
   0.676658612794320   0.141574152952702
   1.334981608333703  -0.902443383904994
   0.001715955960553  -1.251847626238337
   0.448884325309761  -1.008788995633950
  -1.211807608902193   1.687285908600682
   0.403827722775639  -0.128971390675956
   0.093065188161679   1.698714443446983
  -0.395350440534528   2.132429279823386
   0.792052472192931  -1.220472178851321
   0.566612288224767   0.854779661460744
  -2.036626937265797   1.969357059992504
   0.820527114824483   0.013527052236714
   0.427758242842700   1.768407814147747
   1.085436050226593   1.684515455113687
   0.689028586306092   0.096192009847469
   1.670684490088854  -2.511618895397036
   0.070295267522067   0.575704544957042
  -0.129271951230002   1.311122258118093
   0.772616995347484  -1.017416842986284];
if sum((abs(sum(Pbar))<1e-14)+(abs(sum(Pc))<1e-14))==4 && abs(sum(Pbar(1,2)-Pbar(2,2)))<1e-14 && abs(sum(Pc(1,2)-Pc(2,2)))<1e-14
    fprintf('\nThere are a centralized Pbar=V*Lbar and a centralized Pc==V*Lc, where Lbar and Lc are lower triangular.\n');
end
dis_diff=zeros(100,100);
for i=1:100
    for j=1:100
        dis_diff(i,j)=norm(Pc(i,:)-Pc(j,:))^2-norm(Pbar(i,:)-Pbar(j,:))^2;
    end
end
%Since Pc(i,:)-Pc(j,:) and Pbar(i,:)-Pbar(j,:) are in (-6,6) and are accurate,
%(Pc(i,1)-Pc(j,1))^2, (Pc(i,2)-Pc(j,2))^2, (Pbar(i,1)-Pbar(j,1))^2, (Pbar(i,2)-Pbar(j,2))^2 are accurate 
%for its shown digits, i.e., every one has at most 1e-14 error. 
%Thus, dis_diff(i,j) has at most 4e-14 error.
%We note that all dis_diff(i,j) are in (-20, 20).
%Thus, dis_diff(i,j)^2 has at most 2*20*4e-14+4e-14*4e-14<1.7e-12 error.
%Therefore, the summation of dis_diff(i,j)^2 has at most 9900*1.7e-12<1.7e-8 error.
f_Pc_lb=norm(dis_diff,'fro')^2/2-1.7e-8;%lower bound of f_Pc %It is known that f_\ell(\ell)=f_L(Lc)=f(V*Lc)=f(Pc)
fprintf('\nA lower bound of f_ell(ell) is %g\n',f_Pc_lb);
grad_Pc=zeros(100,2);
for i=1:100
for j=1:100
    grad_Pc(i,:)=grad_Pc(i,:)+4*dis_diff(i,j)*(Pc(i,:)-Pc(j,:));
end
end
%Since dis_diff(i,j) has at most 4e-14 error, and Pc(i,:)-Pc(j,:) are accurate in (-6, 6),
%4*dis_diff(i,j)*(Pc(i,:)-Pc(j,:)) has at most 4*6*4e-14<1e-12 error.
%Note that every absolute value of the element in
%4*dis_diff(i,j)*(Pc(i,:)-Pc(j,:)) is smaller than 240.
%The round-off error in 4*dis_diff(i,j)*(Pc(i,:)-Pc(j,:)) is no more than 1e-12.
%Thus, 4*dis_diff(i,j)*(Pc(i,:)-Pc(j,:)) has no more than 2e-12 error in total.
%Therefore, grad_Pc(i,:) has no more than 100*2e-12=2e-10 error.
%Since max(max(abs(grad_Pc))) is presented as 4.520364527138554e-08,
%norm(grad_Pc)^2 has no more than 200*(2*4.6e-8*2e-10+2e-10*2e-10)<3.7e-15 error.
norm_grads_ub=grad_Pc(:)'*grad_Pc(:)+3.7e-15;% an upper bound of \|norm(grad_Pc)\|^2
%norm(grad(f_\ell(\ell c)))\le norm(grad(f_L(Lc)))\le norm(grad(f(V*Lc)))=norm(grad(f(Pc)))
if (9.23e-8)^2>norm_grads_ub
fprintf('\nAn upper bound of norm(grad_ell) is %g\n',9.23e-8);
end
Hessian_Pc=zeros(200,200);
for i=1:100
for j=1:100
    if i~=j
        Hessian_Pc(i,j)=-4*dis_diff(i,j)-8*(Pc(i,1)-Pc(j,1))^2;
        Hessian_Pc(i,100+j)=-8*(Pc(i,1)-Pc(j,1))*(Pc(i,2)-Pc(j,2));
        Hessian_Pc(100+i,j)=-8*(Pc(i,1)-Pc(j,1))*(Pc(i,2)-Pc(j,2));
        Hessian_Pc(100+i,100+j)=-4*dis_diff(i,j)-8*(Pc(i,2)-Pc(j,2))^2;
        Hessian_Pc(i,i)=Hessian_Pc(i,i)+4*dis_diff(i,j)+8*(Pc(i,1)-Pc(j,1))^2;
        Hessian_Pc(i,100+i)=Hessian_Pc(i,100+i)+8*(Pc(i,1)-Pc(j,1))*(Pc(i,2)-Pc(j,2));
        Hessian_Pc(100+i,i)=Hessian_Pc(100+i,i)+8*(Pc(i,1)-Pc(j,1))*(Pc(i,2)-Pc(j,2));
        Hessian_Pc(100+i,100+i)=Hessian_Pc(100+i,100+i)+4*dis_diff(i,j)+8*(Pc(i,2)-Pc(j,2))^2;
    end
end
end
%Since dis_diff(i,j) has at most 4e-14 error,
%all dis_diff(i,j) are in (-20, 20), and Pc(i,:)-Pc(j,:) are accurate in (-6, 6),
%every element of Hessian_Pc has at most 4*4e-14+8*1e-14=2.4e-13 error.
A= ([ones(1,n-1);-eye(n-1)]); 
[V1] = GS(A);
%Here V1 is not an accurate basis of null(en) as sqrt(2) is an irrational number.
%However, every element of V1 has error no more than 1e-15.
%This can be verified by the following.
red_flag=0;
for i=1:99
x=V1(i+1,i)-1e-15;
if (x/i)^2*i+x^2-1<0
    red_flag=1;
end
x=V1(i+1,i)+1e-15;
if (x/i)^2*i+x^2-1>0
    red_flag=1;
end
end
if red_flag==0
    fprintf('\nEvery element of V1 has error no more than %g\n',1e-15);
end
V2=V1(:,2:99);
V=[V1, zeros(100,98);zeros(100,99),V2];
Hessian_lc=V'*Hessian_Pc*V;
eigHl=eig(Hessian_lc);
%We first analyse the error in v'*Hessian_Pc*v, where v denotes any column of V1.
%Since every element of Hessian_Pc has at most 2.4e-13 error, max(max(abs(Hessian_Pc)))<7.2e+3, 
%and every element of v has at most 1e-15 error, Hessian_Pc(i,j)*v(j) has at most 
%7.2e+3*1e-15+1*2.4e-13+1e-15*2.4e-13<7.5e-12 error. Thus, every element of
%Hessian_Pc*v has at most 200*7.5e-12=1.5e-9 error.
%Since max(sum(abs(Hessian_Pc)))<2.3e+4, v'*Hessian_Pc*v has at most 200*(2.3e+4*1e-15+1*1.5e-9+1e-15*1.5e-9)<3.1e-7 error. 
%Therefore,every element of Hessian_lc has at most 3.1e-7 error.
%It is fair to think that numerical min(eig(Hessian_lc)) has error no more than 0.3, 
%then, for all x\in\R^197 with the unit norm, we have x'*Hessian_lc*x>-197*197*3.1e-7+min(eigHl)-0.3.
lambdamin_lb=-197*197*6.1e-7+min(eigHl)-0.3;
lambdamin_ub=197*197*6.1e-7+min(eigHl)+0.3;
fprintf('\nA lower bound of lambdamin(Hessian_lc) is %g\n',lambdamin_lb);
fprintf('\nA upper bound of lambdamin(Hessian_lc) is %g\n',lambdamin_ub);
%Next we calculate gamma: the Lipschitz constant of Hessian
G_ub=0;
for i=1:100
    for j=1:100
        G_ub=G_ub+sqrt((Pc(i,:)-Pc(j,:))*(Pc(i,:)-Pc(j,:))'+1.2e-13);
%Pc(i,:)-Pc(j,:) are accurate, (Pc(i,:)-Pc(j,:))'*(Pc(i,:)-Pc(j,:)) has error no more than 2*6*1e-14+1e-14*1e-14=1.2e-13.
    end
end
G_ub=G_ub+1e-14*100;
fprintf('\nAn upper bound of sum_{i,j}norm(P(i)-P(j)) is %g\n',G_ub);
r=1e-5;
gamma=24*sqrt(2)*(G_ub+2*n*sqrt(n)*r);
%sqrt(2) has an error at most 1e-14, G_ub+2*n*sqrt(n) has an error at most 1e-11.
%gamma has an error at most 24*1e-14*19000+34*1e-11+1e-14*1e-11<5e-9
fprintf('\nAn upper bound of the Lipschitz of Hessian is %g\n',gamma+5e-9);

Phat=Pc;
Lhat=V1'*Pc;
Lhat(:,1)=-Lhat(:,1);
Lbar=V1'*Pbar;
Phat=V1*Lhat;
figure; 
scatter([Pbar(1:6,1);Pbar(8:15,1);Pbar(17:n,1)],[Pbar(1:6,2);Pbar(8:15,2);Pbar(17:n,2)],'k','filled'); 
hold on; 
scatter([Phat(1:6,1);Phat(8:15,1);Phat(17:n,1)],[Phat(1:6,2);Phat(8:15,2);Phat(17:n,2)],'b'); 
hold on; 
scatter([Pbar(7,1)],[Pbar(7,2)],'r','filled');
hold on; 
scatter([Phat(7,1)],[Phat(7,2)],'r'); 
hold on; 
scatter([Pbar(16,1)],[Pbar(16,2)],'g','filled'); 
hold on; 
scatter([Phat(16,1)],[Phat(16,2)],'g');
hold on; 
legend('$\bar{p}_i, i\neq i_0, i_1$','$\tilde{p}_i, i\neq i_0, i_1$','$\bar{p}_{i_0}$','$\tilde{p}_{i_0}$','$\bar{p}_{i_1}$','$\tilde{p}_{i_1}$','Interpreter','latex','FontSize',16);
hold off;
